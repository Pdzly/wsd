# Generated by Django 5.1.3 on 2024-12-27 05:43

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="originalsourceclaim",
            name="insert_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="originalsourceclaim",
            name="update_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="originalsourceclaim",
            name="delete_delete",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="originalsourceclaim",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "core_originalsourceclaimevent" ("comment", "created_at", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "post_id", "slug", "source", "status", "updated_at", "user_id") VALUES (NEW."comment", NEW."created_at", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."post_id", NEW."slug", NEW."source", NEW."status", NEW."updated_at", NEW."user_id"); RETURN NULL;',
                    hash="f2b6e3c71d0f9306100050d704c6622ee0f329cf",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_1e9a2",
                    table="core_originalsourceclaim",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="originalsourceclaim",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "core_originalsourceclaimevent" ("comment", "created_at", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "post_id", "slug", "source", "status", "updated_at", "user_id") VALUES (NEW."comment", NEW."created_at", NEW."id", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."post_id", NEW."slug", NEW."source", NEW."status", NEW."updated_at", NEW."user_id"); RETURN NULL;',
                    hash="2501b770cc6fd7f2e07201e16ccb8c40c0daf325",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_c0a25",
                    table="core_originalsourceclaim",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="originalsourceclaim",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "core_originalsourceclaimevent" ("comment", "created_at", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "post_id", "slug", "source", "status", "updated_at", "user_id") VALUES (OLD."comment", OLD."created_at", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."post_id", OLD."slug", OLD."source", OLD."status", OLD."updated_at", OLD."user_id"); RETURN NULL;',
                    hash="2c33474e18f967ae94e51b28d3ed8a432e704e4a",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_5484f",
                    table="core_originalsourceclaim",
                    when="AFTER",
                ),
            ),
        ),
    ]
